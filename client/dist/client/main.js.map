{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add/add.component.html","webpack:///./src/app/add/add.component.scss","webpack:///./src/app/add/add.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.scss","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/list/list.component.html","webpack:///./src/app/list/list.component.scss","webpack:///./src/app/list/list.component.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.scss","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/weather/weather.component.html","webpack:///./src/app/weather/weather.component.scss","webpack:///./src/app/weather/weather.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\">\\r\\n  <form>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"name\\\">Name</label>\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        id=\\\"name\\\"\\r\\n        placeholder=\\\"Name\\\"\\r\\n        name=\\\"name\\\"\\r\\n        [(ngModel)]=\\\"user.name\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"email\\\">Email address</label>\\r\\n      <input\\r\\n        type=\\\"email\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        id=\\\"email\\\"\\r\\n        name=\\\"email\\\"\\r\\n        [(ngModel)]=\\\"user.email\\\"\\r\\n        aria-describedby=\\\"emailHelp\\\"\\r\\n        placeholder=\\\"Enter email\\\"\\r\\n      />\\r\\n      <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\"\\r\\n        >We'll never share your email with anyone else.</small\\r\\n      >\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"mobile\\\">Mobile</label>\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        id=\\\"mobile\\\"\\r\\n        name=\\\"mobile\\\"\\r\\n        [(ngModel)]=\\\"user.mobile\\\"\\r\\n        placeholder=\\\"Mobile No.\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"job\\\">Job Title</label>\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        id=\\\"job\\\"\\r\\n        name=\\\"job_title\\\"\\r\\n        [(ngModel)]=\\\"user.job_title\\\"\\r\\n        placeholder=\\\"Job Title\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\">\\r\\n      Submit\\r\\n    </button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","module.exports = \"form {\\n  margin-top: 30px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { DataService } from '../data.service';\r\n\r\n@Component({\r\n  selector: 'app-add',\r\n  templateUrl: './add.component.html',\r\n  styleUrls: ['./add.component.scss']\r\n})\r\nexport class AddComponent implements OnInit {\r\n  user: Object = {};\r\n  constructor(private data: DataService) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  onSubmit() {\r\n    this.data.createUser(this.user).subscribe((data) => {\r\n      if (data['message'] === 'User added successfully') {\r\n        this.user = data;\r\n        console.log('User added successfully');\r\n      } else {\r\n        console.log('User create failed');\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {AddComponent} from './add/add.component';\r\nimport {ListComponent} from './list/list.component';\r\nimport {EditComponent} from './edit/edit.component';\r\nimport {WeatherComponent} from './weather/weather.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddComponent\r\n  },\r\n  {\r\n    path: 'list',\r\n    component: ListComponent\r\n  },\r\n  {\r\n    path: 'edit/:id',\r\n    component: EditComponent\r\n  },\r\n  {\r\n    path: 'weather',\r\n    component: WeatherComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"<div id=\\\"container\\\">\\r\\n  <app-navbar></app-navbar>\\r\\n  <div id=\\\"content\\\"><router-outlet></router-outlet></div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'client';\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {NavbarComponent} from './navbar/navbar.component';\r\nimport {AddComponent} from './add/add.component';\r\nimport {ListComponent} from './list/list.component';\r\nimport {EditComponent} from './edit/edit.component';\nimport { WeatherComponent } from './weather/weather.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    AddComponent,\r\n    ListComponent,\r\n    EditComponent,\r\n    WeatherComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  createUser(data) {\r\n    //return this.http.post('http://localhost:2611/api/v1/create', data);\r\n    return this.http.post('api/v1/create', data);\r\n  }\r\n\r\n  getAllUser() {\r\n    //return this.http.get('http://localhost:2611/api/v1/getAll');\r\n    return this.http.get('api/v1/getAll');\r\n  }\r\n\r\n  deleteUser(id) {\r\n    return this.http.delete(`/api/v1/delete/${id}`);\r\n    //return this.http.delete(`http://localhost:2611/api/v1/delete/${id}`);\r\n  }\r\n\r\n  getUserById(id) {\r\n    return this.http.get(`/api/v1/get/${id}`);\r\n    //return this.http.get(`http://localhost:2611/api/v1/get/${id}`);\r\n  }\r\n\r\n  updateUser(data, id) {\r\n    return this.http.put(`/api/v1/update/${id}`, data);\r\n    //return this.http.put(`http://localhost:2611/api/v1/update/${id}`, data);\r\n  }\r\n  postWeather(data) {\r\n    return this.http.post('/api/v1/weather', data);\r\n    //return this.http.post('http://localhost:2611/api/v1/weather', data);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <form [formGroup]=\\\"userForm\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"name\\\">Name</label>\\r\\n      <input\\r\\n        class=\\\"form-control\\\"\\r\\n        id=\\\"name\\\"\\r\\n        placeholder=\\\"Name\\\"\\r\\n        name=\\\"name\\\"\\r\\n        formControlName=\\\"name\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"email\\\">Email address</label>\\r\\n      <input\\r\\n        class=\\\"form-control\\\"\\r\\n        id=\\\"email\\\"\\r\\n        name=\\\"email\\\"\\r\\n        formControlName=\\\"email\\\"\\r\\n        aria-describedby=\\\"emailHelp\\\"\\r\\n        placeholder=\\\"Enter email\\\"\\r\\n      />\\r\\n      <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\"\\r\\n        >We'll never share your email with anyone else.</small\\r\\n      >\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"mobile\\\">Mobile</label>\\r\\n      <input\\r\\n        class=\\\"form-control\\\"\\r\\n        id=\\\"mobile\\\"\\r\\n        name=\\\"mobile\\\"\\r\\n        formControlName=\\\"mobile\\\"\\r\\n        placeholder=\\\"Mobile No.\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"job\\\">Job Title</label>\\r\\n      <input\\r\\n        class=\\\"form-control\\\"\\r\\n        id=\\\"job\\\"\\r\\n        name=\\\"job_title\\\"\\r\\n        formControlName=\\\"job_title\\\"\\r\\n        placeholder=\\\"Job Title\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\">\\r\\n      Submit\\r\\n    </button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {FormGroup, FormBuilder} from '@angular/forms';\r\nimport {DataService} from '../data.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.scss']\r\n})\r\nexport class EditComponent implements OnInit {\r\n  user$: Object;\r\n  userForm: FormGroup;\r\n  id: String = '';\r\n  name: String = '';\r\n  email: String = '';\r\n  mobile: String = '';\r\n  job_title: String = '';\r\n  constructor(\r\n    private data: DataService,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.route.params.subscribe((params) => (this.user$ = params.id));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userForm = this.formBuilder.group({\r\n      //id: [],\r\n      name: [''],\r\n      email: [''],\r\n      mobile: [''],\r\n      job_title: ['']\r\n    });\r\n    this.data.getUserById(this.user$).subscribe((data) => {\r\n      this.id = data['data']['id'];\r\n      this.userForm.setValue({\r\n        name: data['data']['name'],\r\n        email: data['data']['email'],\r\n        mobile: data['data']['mobile'],\r\n        job_title: data['data']['designation']\r\n      });\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.data.updateUser(this.userForm.value, this.id).subscribe((data) => {\r\n      if (data['message'] === 'User updated successfully') {\r\n        console.log('User updated successfully');\r\n      } else {\r\n        console.log('User update failed');\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"table-responsive\\\">\\r\\n    <table class=\\\"table table-hover table-dark\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">#</th>\\r\\n          <th scope=\\\"col\\\">Name</th>\\r\\n          <th scope=\\\"col\\\">Email</th>\\r\\n          <th scope=\\\"col\\\">Mobile</th>\\r\\n          <th scope=\\\"col\\\">Job Title</th>\\r\\n          <th scope=\\\"col\\\">Edit</th>\\r\\n          <th scope=\\\"col\\\">Delete</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let user of users$\\\">\\r\\n          <td>{{ user.id }}</td>\\r\\n          <td>{{ user.name }}</td>\\r\\n          <td>{{ user.email }}</td>\\r\\n          <td>{{ user.mobile }}</td>\\r\\n          <td>{{ user.designation }}</td>\\r\\n          <td>\\r\\n            <a\\r\\n              routerLink=\\\"/edit/{{ user.id }}\\\"\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-primary\\\"\\r\\n              >Edit</a\\r\\n            >\\r\\n          </td>\\r\\n          <td>\\r\\n            <a type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onDelete(user.id)\\\">\\r\\n              Delete\\r\\n            </a>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"table {\\n  margin-top: 60px; }\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\n\r\nimport {DataService} from '../data.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss']\r\n})\r\nexport class ListComponent implements OnInit {\r\n  users$: Object;\r\n  constructor(\r\n    private data: DataService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.data.getAllUser().subscribe((data) => (this.users$ = data['data']));\r\n  }\r\n\r\n  onDelete(id) {\r\n    this.data.deleteUser(id).subscribe((data) => {\r\n      if (data['message'] === 'User deleted successfully') {\r\n        this.ngOnInit();\r\n        console.log('User deleted successfully');\r\n      } else {\r\n        console.log('User deletion failed');\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n  <a routerLink=\\\"\\\" class=\\\"navbar-brand\\\" href=\\\"#\\\">\\r\\n    <img\\r\\n      src=\\\"../../assets/images/logo.png\\\"\\r\\n      width=\\\"30\\\"\\r\\n      height=\\\"30\\\"\\r\\n      class=\\\"d-inline-block align-top\\\"\\r\\n      alt=\\\"\\\"\\r\\n    />\\r\\n    Sagar Betkar\\r\\n  </a>\\r\\n  <button\\r\\n    class=\\\"navbar-toggler\\\"\\r\\n    type=\\\"button\\\"\\r\\n    data-toggle=\\\"collapse\\\"\\r\\n    data-target=\\\"#navbarSupportedContent\\\"\\r\\n    aria-controls=\\\"navbarSupportedContent\\\"\\r\\n    aria-expanded=\\\"false\\\"\\r\\n    aria-label=\\\"Toggle navigation\\\"\\r\\n  >\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item active\\\">\\r\\n        <a routerLink=\\\"\\\" class=\\\"nav-link\\\" href=\\\"#\\\"\\r\\n          >Add <span class=\\\"sr-only\\\">(current)</span></a\\r\\n        >\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a routerLink=\\\"list\\\" class=\\\"nav-link\\\" href=\\\"#\\\">List</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a routerLink=\\\"weather\\\" class=\\\"nav-link\\\" href=\\\"#\\\">Weather</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"city\\\" class=\\\"sr-only\\\">City</label>\\n      <input\\n        type=\\\"text\\\"\\n        class=\\\"form-control\\\"\\n        id=\\\"city\\\"\\n        aria-describedby=\\\"cityHelp\\\"\\n        placeholder=\\\"City Name\\\"\\n        [(ngModel)]=\\\"weather.city\\\"\\n        name=\\\"city\\\"\\n      />\\n      <small id=\\\"cityHelp\\\" class=\\\"form-text text-muted\\\"\\n        >User has to put city name</small\\n      >\\n    </div>\\n    <button\\n      type=\\\"button\\\"\\n      class=\\\"btn btn-primary mb-2\\\"\\n      (click)=\\\"onSubmit(weather.city)\\\"\\n    >\\n      Submit\\n    </button>\\n  </form>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"table-responsive\\\">\\n    <table class=\\\"table table-hover table-dark\\\">\\n      <thead>\\n        <tr>\\n          <!-- <th scope=\\\"col\\\">Date & Time</th> -->\\n          <th scope=\\\"col\\\">Temperature</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let weatherTemp of weatherTemps$\\\">\\n          <!-- <td>{{ weatherData.date }}</td> -->\\n          <td>{{ weatherTemp }}</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","module.exports = \"form {\\n  margin-top: 60px; }\\n\\ntable {\\n  margin-top: 50px; }\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {DataService} from '../data.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n  weather: Object = {};\n  weatherTemps$: Object;\n  //weatherDates$: Object;\n  constructor(private data: DataService) {}\n\n  ngOnInit() {}\n\n  onSubmit() {\n    this.data.postWeather(this.weather).subscribe((data) => {\n      //console.log(data['message'].temp);\n      this.weatherTemps$ = data['message'].temp;\n      //this.weatherDates$ = data['message'].date;\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}